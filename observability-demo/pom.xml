<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.redhat.demo</groupId>
	<artifactId>eap-observability-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>eap-observability-demo Maven Webapp</name>
	<!-- FIXME change it to the project's website -->
	<url>http://www.example.com</url>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->

		<version.wildfly.maven.plugin>2.0.0.Final</version.wildfly.maven.plugin>
		<version.wildfly>21.0.1.Final</version.wildfly>

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>19.0.0.Beta1</version.jboss.bom>

		<!-- other plugin versions -->
		<version.war.plugin>3.2.2</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		
		<version.server.bom>${version.wildfly}</version.server.bom>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- JBoss distributes a complete set of Jakarta EE 8 APIs including a 
				Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or a 
				collection) of artifacts. We use this here so that we always get the correct 
				versions of artifacts. Here we use the wildfly-jakartaee-8.0-with-tools stack 
				(you can read this as the WildFly stack of the Jakarta EE 8 APIs, with some 
				extras tools for your project, such as Arquillian for testing) -->
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-jakartaee8-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.3_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss EAP -->
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import MicroProfile APIs -->
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.opentracing
		</groupId>
			<artifactId>
		microprofile-opentracing-api
		</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.metrics</groupId>
			<artifactId>microprofile-metrics-api</artifactId>
			<!-- <version>2.3-RC1</version> -->
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- Tell Maven that the resulting file should not have a file name containing 
			the version - a non versioned name is required e.g. when building a deployable 
			artifact using the ShrinkWrap API -->
		<finalName>eap-observability-demo</finalName>

		<plugins>

			<!--Build configuration for the WAR plugin: -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Jakarta EE doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- The WildFly plugin deploys your war to a local JBoss AS container -->
			<!-- <plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${version.wildfly.maven.plugin}</version>
			</plugin>

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-jar-maven-plugin</artifactId>
				<version>3.0.0.Beta1</version>
				<configuration>
					<feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#${version.server.bom}</feature-pack-location>
					<layers>
						<layer>jaxrs</layer>
						<layer>management</layer>
					</layers>
					<excluded-layers>
						<layer>deployment-scanner</layer>
					</excluded-layers>
					<plugin-options>
						<jboss-fork-embedded>true</jboss-fork-embedded>
					</plugin-options>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->

		</plugins>
	</build>
</project>